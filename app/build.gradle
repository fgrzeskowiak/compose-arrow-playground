plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id "dagger.hilt.android.plugin"
    id "kotlinx-serialization"
    id 'com.google.devtools.ksp' version '1.8.21-1.0.11'
}

ext {
    secrets = [
            moviesBaseUrl    : keyProperty("MOVIES_BASE_URL"),
            moviesAccessToken: keyProperty("MOVIES_ACCESS_TOKEN")
    ]
}
android {
    namespace 'com.filippo.either'
    compileSdk 33

    defaultConfig {
        applicationId "com.filippo.either"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField "String", "MOVIES_BASE_URL", "\"${secrets.moviesBaseUrl}\""
        buildConfigField "String", "MOVIES_ACCESS_TOKEN", "\"${secrets.moviesAccessToken}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        kotlinOptions {
            freeCompilerArgs += [
                    "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                    "-opt-in=kotlinx.coroutines.InternalCoroutinesApi",
                    "-opt-in=kotlinx.coroutines.FlowPreview",
                    "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
                    "-Xopt-in=androidx.compose.ui.ExperimentalComposeUiApi",
                    "-Xopt-in=androidx.compose.material.ExperimentalMaterialApi",
            ]
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    applicationVariants.all { variant ->
        addJavaSourceFoldersToModel(
                file("${buildDir}/generated/ksp/${variant.name}/kotlin")
        )
    }
}

dependencies {
    def composeBom = platform("androidx.compose:compose-bom:$composeBomVersion")
    implementation(composeBom)
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.compose.material:material'
    implementation "androidx.navigation:navigation-compose"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Navigation
    implementation "io.github.raamcosta.compose-destinations:core:$destinationVersion"
    ksp "io.github.raamcosta.compose-destinations:ksp:$destinationVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    // Arrow
    implementation "io.arrow-kt:arrow-core:1.2.0"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // Network
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.github.mrmike:ok2curl:0.7.0"
    implementation "io.coil-kt:coil-compose:2.3.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    androidTestImplementation(composeBom)
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}
